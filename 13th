if [Document Date] <> null then 
    let 
        year = Date.Year([Document Date]), 
        month = Date.Month([Document Date]), 
        quarter = 
            if month >= 1 and month <= 3 then "Q1" 
            else if month >= 4 and month <= 6 then "Q2" 
            else if month >= 7 and month <= 9 then "Q3" 
            else if month >= 10 and month <= 12 then "Q4" 
            else null 
    in 
        quarter & " " & Text.From(year) 
else 
    if [ITD] <> null then 
        let 
            quartersAndYear = Text.Split([ITD], " "),
            quarter = quartersAndYear{0},
            yearText = if List.Count(quartersAndYear) > 1 then quartersAndYear{1} else null,
            year = if yearText <> null then try Int32.From(Text.Trim(yearText)) otherwise null else null
        in 
            if year <> null then quarter & " " & Text.From(year) else null
    else 
        if [Period] <> null then 
            let 
                year = Date.Year([Period]), 
                month = Date.Month([Period]), 
                quarter = 
                    if month >= 1 and month <= 3 then "Q1" 
                    else if month >= 4 and month <= 6 then "Q2" 
                    else if month >= 7 and month <= 9 then "Q3" 
                    else if month >= 10 and month <= 12 then "Q4" 
                    else null 
            in 
                quarter & " " & Text.From(year) 
        else 
            null






if [Item Transaction Description] = null then null 
else 
    let 
        description = [Item Transaction Description],
        quarters = {"Q1", "Q2", "Q3", "Q4"},
        quarterYearMatches = List.Buffer(
            List.Select(
                List.Generate(
                    () => [startPos = 0, endPos = 0],
                    each [endPos] <> -1,
                    each [
                        startPos = Text.PositionOf(Text.Upper(description), "Q", [endPos]),
                        endPos = if startPos <> -1 then Text.PositionOf(Text.Upper(description), " ", startPos + 1) else -1
                    ],
                    each {[startPos], [endPos]} // Return a record containing startPos and endPos
                ),
                each [startPos] <> -1 and [endPos] <> -1
            )
        ),
        quarterYears = List.Transform(quarterYearMatches, each Text.Trim(Text.Middle(description, _{0}{0}, _{1}{0} - _{0}{0}))),
        filteredQuarterYears = List.Select(quarterYears, each Text.Length(_) >= 4 and Text.Length(_) <= 7),
        latestQuarterYear = if List.IsEmpty(filteredQuarterYears) then null else List.Last(List.Sort(filteredQuarterYears))
    in 
        latestQuarterYear
