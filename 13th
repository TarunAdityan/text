if [Document Date] <> null then 
    let 
        year = Date.Year([Document Date]), 
        month = Date.Month([Document Date]), 
        quarter = 
            if month >= 1 and month <= 3 then "Q1" 
            else if month >= 4 and month <= 6 then "Q2" 
            else if month >= 7 and month <= 9 then "Q3" 
            else if month >= 10 and month <= 12 then "Q4" 
            else null 
    in 
        quarter & " " & Text.From(year) 
else 
    if [ITD] <> null then 
        let 
            quartersAndYear = Text.Split([ITD], " "),
            quarter = quartersAndYear{0},
            yearText = if List.Count(quartersAndYear) > 1 then quartersAndYear{1} else null,
            year = if yearText <> null then try Int32.From(Text.Trim(yearText)) otherwise null else null
        in 
            if year <> null then quarter & " " & Text.From(year) else null
    else 
        if [Period] <> null then 
            let 
                year = Date.Year([Period]), 
                month = Date.Month([Period]), 
                quarter = 
                    if month >= 1 and month <= 3 then "Q1" 
                    else if month >= 4 and month <= 6 then "Q2" 
                    else if month >= 7 and month <= 9 then "Q3" 
                    else if month >= 10 and month <= 12 then "Q4" 
                    else null 
            in 
                quarter & " " & Text.From(year) 
        else 
            null







if [Item Transaction Description] = null then null 
else 
    let 
        description = [Item Transaction Description],
        quarters = {"Q1", "Q2", "Q3", "Q4"},
        findQuarter = List.Select(quarters, each Text.Contains(description, _)),
        quarterYear = 
            if List.Count(findQuarter) > 0 then 
                let 
                    quartersAndYears = List.Transform(findQuarter, each Text.Middle(description, Text.PositionOf(description, _) + 3, 4)),
                    sortedQuarters = List.Sort(quartersAndYears, Order.Descending),
                    latestQuarter = sortedQuarters{0}
                in 
                    latestQuarter
            else 
                let
                    quarterYearMatches = List.Buffer(Text.Matches(description, "[Qq][1-4]'.*?[1-2][0-9]{3}")),
                    maxYear = List.Max(List.Transform(quarterYearMatches, each Text.Middle(_, 3, 4))),
                    latestQuarterYear = Text.Select(List.First(List.Select(quarterYearMatches, each Text.Middle(_, 1, 2) & Text.Middle(_, 3, 2) = maxYear)), {"Q1", "Q2", "Q3", "Q4"})
                in
                    latestQuarterYear
    in 
        quarterYear
